    Terminal Tic Tac Toe
    

    Each new game will be an instance of the Game class. Game class will keep track of player names and current board.

    Each board will be an instance of the Board class. It will keep track of board state and contain the methods that check for a win.
    
    Mark class will take coordinates (A2) and mark type (X or O) on instance creation.


    At the start of the game, the program will ask for Player 1's name and store it in a variable. Same for Player 2.
    It will then create an instance of the Game class, passing in the player names as parameters.
    The Game class' #initialize method will create a new Board instance, and store it as @board.
    The program will randomize who gets Xs and Os, and prompt X-player to make their first move.

    The player will input a coordinate, A1 - C3. An instance of the Mark class will be created and inserted into the Board instance's array.

    If that player has made at least 3 moves, the Board instance will check for a 3-in-a-row. It will return 'X', 'O', or false.
    The game will continue or display a message similar to "Xs wins! Make a choice: 1. Play another round. 2. Change names.

    To draw the board, the program will iterate through the board[state] hash.
      For indices 0, 3, and 6, it will puts the value at that index
      These indices should be targetable by (if index % 3 == 0).
      For indices 1, 4, and 7, it will print '|*|', where * is the value at that index.
      These indices should be targetable by (if index % 3 == 1).
      For indices 2, 5, and 8, it will print the value at that index, followed by puts _____ (five   underscores).
      These indices should behave like: index % 3 == 2.